// <auto-generated />
using System;
using InVents.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InVents.Migrations
{
    [DbContext(typeof(InVentsContext))]
    partial class InVentsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.11");

            modelBuilder.Entity("EventoFornecedor", b =>
                {
                    b.Property<int>("EventosFornecidosId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FornecedoresId")
                        .HasColumnType("INTEGER");

                    b.HasKey("EventosFornecidosId", "FornecedoresId");

                    b.HasIndex("FornecedoresId");

                    b.ToTable("EventoFornecedor");
                });

            modelBuilder.Entity("InVents.Models.Empresa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CNPJ")
                        .HasColumnType("TEXT");

                    b.Property<string>("NomeFantasia")
                        .HasColumnType("TEXT");

                    b.Property<string>("RazaoSocial")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Empresa");
                });

            modelBuilder.Entity("InVents.Models.Evento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Cidade")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("Data")
                        .HasColumnType("TEXT");

                    b.Property<int?>("EmpresaId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Estado")
                        .HasColumnType("TEXT");

                    b.Property<string>("Imagens")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.ToTable("Evento");
                });

            modelBuilder.Entity("InVents.Models.Fornecedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Bairro")
                        .HasColumnType("TEXT");

                    b.Property<int?>("CNPJ")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Cidade")
                        .HasColumnType("TEXT");

                    b.Property<string>("Complemento")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<int?>("EmpresaId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Endereco")
                        .HasColumnType("TEXT");

                    b.Property<string>("Estado")
                        .HasColumnType("TEXT");

                    b.Property<string>("Imagem")
                        .HasColumnType("TEXT");

                    b.Property<double>("MediaNota")
                        .HasColumnType("REAL");

                    b.Property<string>("NomeFantasia")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Numero")
                        .HasColumnType("INTEGER");

                    b.Property<string>("RazaoSocial")
                        .HasColumnType("TEXT");

                    b.Property<string>("Setor")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.ToTable("Fornecedor");
                });

            modelBuilder.Entity("InVents.Models.Nota", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("EmpresaId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("FornecedorId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("NotaValor")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ProdutorId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Nota");
                });

            modelBuilder.Entity("InVents.Models.Produtor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Cargo")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<int?>("EmpresaId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("EventoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FornecedoresContratados")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Telefone")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("EventoId");

                    b.ToTable("Produtor");
                });

            modelBuilder.Entity("EventoFornecedor", b =>
                {
                    b.HasOne("InVents.Models.Evento", null)
                        .WithMany()
                        .HasForeignKey("EventosFornecidosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InVents.Models.Fornecedor", null)
                        .WithMany()
                        .HasForeignKey("FornecedoresId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("InVents.Models.Evento", b =>
                {
                    b.HasOne("InVents.Models.Empresa", "Empresa")
                        .WithMany("EventosRealizados")
                        .HasForeignKey("EmpresaId");

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("InVents.Models.Fornecedor", b =>
                {
                    b.HasOne("InVents.Models.Empresa", null)
                        .WithMany("FornecedoresContratados")
                        .HasForeignKey("EmpresaId");
                });

            modelBuilder.Entity("InVents.Models.Produtor", b =>
                {
                    b.HasOne("InVents.Models.Empresa", null)
                        .WithMany("Funcionarios")
                        .HasForeignKey("EmpresaId");

                    b.HasOne("InVents.Models.Evento", null)
                        .WithMany("Produtores")
                        .HasForeignKey("EventoId");
                });

            modelBuilder.Entity("InVents.Models.Empresa", b =>
                {
                    b.Navigation("EventosRealizados");

                    b.Navigation("FornecedoresContratados");

                    b.Navigation("Funcionarios");
                });

            modelBuilder.Entity("InVents.Models.Evento", b =>
                {
                    b.Navigation("Produtores");
                });
#pragma warning restore 612, 618
        }
    }
}
